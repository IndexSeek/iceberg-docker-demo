#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

services:
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - "./data:/data:ro"
      - "./docker/warehouse/init-minio.sh:/init-minio.sh:ro"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin123}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-http://minio:9000}
    restart: "no"
    entrypoint: ["sh", "/init-minio.sh"]
  postgres:
    image: postgres:17.5
    ports:
      - "5432:5432"
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-iceberg_catalog}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --data-checksums
    volumes:
      - type: bind
        source: ./docker/catalog/postgresql.conf
        target: /etc/postgresql/postgresql.conf
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 5s
      timeout: 2s
      retries: 15
  catalog-init:
    build:
      context: .
      dockerfile: docker/catalog/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-iceberg_catalog}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ENDPOINT_URL=${S3_ENDPOINT:-http://minio:9000}
      - WAREHOUSE_PATH=${WAREHOUSE_PATH:-s3://warehouse/}
      - PYICEBERG_CATALOG__DEFAULT__TYPE=sql
      - PYICEBERG_CATALOG__DEFAULT__URI=postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-iceberg_catalog}
      - PYICEBERG_CATALOG__DEFAULT__WAREHOUSE=${WAREHOUSE_PATH:-s3://warehouse/}
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - PYICEBERG_CATALOG__DEFAULT__S3__ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - PYICEBERG_CATALOG__DEFAULT__S3__SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - PYICEBERG_CATALOG__DEFAULT__S3__PATH_STYLE_ACCESS=true
    restart: "no"
  marimo:
    build:
      context: .
      dockerfile: docker/notebook/Dockerfile
    ports:
      - "2718:2718"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      catalog-init:
        condition: service_completed_successfully
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-iceberg_catalog}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - AWS_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - AWS_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_ENDPOINT_URL=${S3_ENDPOINT:-http://minio:9000}
      - WAREHOUSE_PATH=${WAREHOUSE_PATH:-s3://warehouse/}
      - PYICEBERG_CATALOG__DEFAULT__TYPE=sql
      - PYICEBERG_CATALOG__DEFAULT__URI=postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-iceberg_catalog}
      - PYICEBERG_CATALOG__DEFAULT__WAREHOUSE=${WAREHOUSE_PATH:-s3://warehouse/}
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - PYICEBERG_CATALOG__DEFAULT__S3__ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-minioadmin}
      - PYICEBERG_CATALOG__DEFAULT__S3__SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-minioadmin123}
      - PYICEBERG_CATALOG__DEFAULT__S3__PATH_STYLE_ACCESS=true
    volumes:
      - "./notebooks:/notebooks"

volumes:
  minio_data:
